{
  "version": 3,
  "sources": ["../../locar/dist/locar.es.js"],
  "sourcesContent": ["var W = (a) => {\n  throw TypeError(a);\n};\nvar L = (a, t, e) => t.has(a) || W(\"Cannot \" + e);\nvar i = (a, t, e) => (L(a, t, \"read from private field\"), e ? e.call(a) : t.get(a)), d = (a, t, e) => t.has(a) ? W(\"Cannot add the same private member more than once\") : t instanceof WeakSet ? t.add(a) : t.set(a, e), r = (a, t, e, s) => (L(a, t, \"write to private field\"), s ? s.call(a, e) : t.set(a, e), e), u = (a, t, e) => (L(a, t, \"access private method\"), e);\nvar j = (a, t, e, s) => ({\n  set _(n) {\n    r(a, t, n, e);\n  },\n  get _() {\n    return i(a, t, s);\n  }\n});\nimport * as o from \"three\";\nvar v, _, q, I, F;\nclass N {\n  /**\n   * Create a SphMercProjection.\n   */\n  constructor() {\n    d(this, v);\n    this.EARTH = 4007501668e-2, this.HALF_EARTH = 2003750834e-2;\n  }\n  /**\n   * Project a longitude and latitude into Spherical Mercator.\n   * @param {number} lon - the longitude.\n   * @param {number} lat - the latitude.\n   * @return {Array} Two-member array containing easting and northing.\n   */\n  project(t, e) {\n    return [u(this, v, _).call(this, t), u(this, v, q).call(this, e)];\n  }\n  /**\n   * Unproject a Spherical Mercator easting and northing.\n   * @param {Array} projected - Two-member array containing easting and northing\n   * @return {Array} Two-member array containing longitude and latitude \n   */\n  unproject(t) {\n    return [u(this, v, I).call(this, t[0]), u(this, v, F).call(this, t[1])];\n  }\n  /**\n   * Return the projection's ID.\n   * @return {string} The value \"epsg:3857\".\n   */\n  getID() {\n    return \"epsg:3857\";\n  }\n}\nv = new WeakSet(), _ = function(t) {\n  return t / 180 * this.HALF_EARTH;\n}, q = function(t) {\n  var e = Math.log(Math.tan((90 + t) * Math.PI / 360)) / (Math.PI / 180);\n  return e * this.HALF_EARTH / 180;\n}, I = function(t) {\n  return t / this.HALF_EARTH * 180;\n}, F = function(t) {\n  var e = t / this.HALF_EARTH * 180;\n  return e = 180 / Math.PI * (2 * Math.atan(Math.exp(e * Math.PI / 180)) - Math.PI / 2), e;\n};\nvar O, M, f, b, P, w, m, y, E, p, l, H, S, x, G;\nclass Y {\n  /**\n   * @param {THREE.Scene} scene - The Three.js scene to use.\n   * @param {THREE.Camera} camera - The Three.js camera to use. Should usually \n   * be a THREE.PerspectiveCamera.\n   * @param {Object} options - Initialisation options for the GPS; see\n   * setGpsOptions() below.\n   * @param {Object} serverLogger - an object which can optionally log GPS position to a server for debugging. null by default, so no logging will be done. This object should implement a sendData() method to send data (2nd arg) to a given endpoint (1st arg). Please see source code for details. Ensure you comply with privacy laws (GDPR or equivalent) if implementing this.\n   */\n  constructor(t, e, s = {}, n = null) {\n    d(this, l);\n    d(this, O);\n    d(this, M);\n    d(this, f);\n    d(this, b);\n    d(this, P);\n    d(this, w);\n    d(this, m);\n    d(this, y);\n    d(this, E);\n    d(this, p);\n    this.scene = t, this.camera = e, r(this, O, new N()), r(this, M, {}), r(this, f, null), r(this, b, 0), r(this, P, 100), r(this, w, null), this.setGpsOptions(s), r(this, m, null), r(this, y, 0), r(this, E, 0), r(this, p, n);\n  }\n  /**\n   * Set the projection to use.\n   * @param {Object} any object which includes a project() method \n   * taking longitude and latitude as arguments and returning an array \n   * containing easting and northing.\n   */\n  setProjection(t) {\n    r(this, O, t);\n  }\n  /**\n   * Set the GPS options.\n   * @param {Object} object containing gpsMinDistance and/or gpsMinAccuracy\n   * properties. The former specifies the number of metres which the device\n   * must move to process a new GPS reading, and the latter specifies the \n   * minimum accuracy, in metres, for a GPS reading to be counted.\n   */\n  setGpsOptions(t = {}) {\n    t.gpsMinDistance !== void 0 && r(this, b, t.gpsMinDistance), t.gpsMinAccuracy !== void 0 && r(this, P, t.gpsMinAccuracy);\n  }\n  /**\n   * Start the GPS on a real device\n   * @return {boolean} code indicating whether the GPS was started successfully.\n   * GPS errors can be handled by handling the gpserror event.\n   */\n  async startGps() {\n    if (i(this, p)) {\n      const e = await (await i(this, p).sendData(\"/gps/start\", {\n        gpsMinDistance: i(this, b),\n        gpsMinAccuracy: i(this, P)\n      })).json();\n      r(this, E, e.session);\n    }\n    return i(this, w) === null ? (r(this, w, navigator.geolocation.watchPosition(\n      (t) => {\n        u(this, l, x).call(this, t);\n      },\n      (t) => {\n        i(this, M).gpserror ? i(this, M).gpserror(t.code) : alert(`GPS error: code ${t.code}`);\n      },\n      {\n        enableHighAccuracy: !0\n      }\n    )), !0) : !1;\n  }\n  /**\n   * Stop the GPS on a real device\n   * @return {boolean} true if the GPS was stopped, false if it could not be\n   * stopped (i.e. it was never started).\n   */\n  stopGps() {\n    return i(this, w) !== null ? (navigator.geolocation.clearWatch(i(this, w)), r(this, w, null), !0) : !1;\n  }\n  /**\n   * Send a fake GPS signal. Useful for testing on a desktop or laptop.\n   * @param {number} lon - The longitude.\n   * @param {number} lat - The latitude.\n   * @param {number} elev - The elevation in metres. (optional, set to null\n   * for no elevation).\n   * @param {number} acc - The accuracy of the GPS reading in metres. May be\n   * ignored if lower than the specified minimum accuracy.\n   */\n  fakeGps(t, e, s = null, n = 0) {\n    s !== null && this.setElevation(s), u(this, l, x).call(this, {\n      coords: {\n        longitude: t,\n        latitude: e,\n        accuracy: n\n      }\n    });\n  }\n  /**\n   * Convert longitude and latitude to three.js/WebGL world coordinates.\n   * Uses the specified projection, and negates the northing (in typical\n   * projections, northings increase northwards, but in the WebGL coordinate\n   * system, we face negative z if the camera is at the origin with default\n   * rotation).\n   * @param {number} lon - The longitude.\n   * @param {number} lat - The latitude.\n   * @return {Array} a two member array containing the WebGL x and z coordinates\n   */\n  lonLatToWorldCoords(t, e) {\n    const s = i(this, O).project(t, e);\n    if (i(this, m))\n      s[0] -= i(this, m)[0], s[1] -= i(this, m)[1];\n    else\n      throw \"No initial position determined\";\n    return [s[0], -s[1]];\n  }\n  /**\n   * Add a new AR object at a given latitude, longitude and elevation.\n   * @param {THREE.Mesh} object the object\n   * @param {number} lon - the longitude.\n   * @param {number} lat - the latitude.\n   * @param {number} elev - the elevation in metres \n   * (if not specified, 0 is assigned)\n   * @param {Object} properties - properties describing the object (for example,\n   * the contents of the GeoJSON properties field).\n   */\n  add(t, e, s, n, h = {}) {\n    var g;\n    t.properties = h, u(this, l, H).call(this, t, e, s, n), this.scene.add(t), (g = i(this, p)) == null || g.sendData(\"/object/new\", {\n      position: t.position,\n      x: t.position.x,\n      z: t.position.z,\n      session: i(this, E),\n      properties: h\n    });\n  }\n  /**\n   * Set the elevation (y coordinate) of the camera.\n   * @param {number} elev - the elevation in metres.\n   */\n  setElevation(t) {\n    this.camera.position.y = t;\n  }\n  /**\n   * Add an event handler.\n   * Currently-understood events: \"gpsupdate\" and \"gpserror\".\n   * The former fires when a GPS update is received, and is passed the\n   * standard Geolocation API position object, along with the distance moved\n   * since the last GPS update in metres.\n   * The latter fires when a GPS error is generated, and is passed the\n   * standard Geolocation API numerical error code.\n   * @param {string} eventName - the event to handle.\n   * @param {Function} eventHandler - the event handler function.\n   * @listens LocationBased#gpsupdate\n   * @listens LocationBased#gpserror\n   */\n  on(t, e) {\n    i(this, M)[t] = e;\n  }\n}\nO = new WeakMap(), M = new WeakMap(), f = new WeakMap(), b = new WeakMap(), P = new WeakMap(), w = new WeakMap(), m = new WeakMap(), y = new WeakMap(), E = new WeakMap(), p = new WeakMap(), l = new WeakSet(), H = function(t, e, s, n) {\n  const h = this.lonLatToWorldCoords(e, s);\n  n !== void 0 && (t.position.y = n), [t.position.x, t.position.z] = h;\n}, S = function(t, e) {\n  r(this, m, i(this, O).project(t, e));\n}, x = function(t) {\n  var s, n, h;\n  let e = Number.MAX_VALUE;\n  j(this, y)._++, (s = i(this, p)) == null || s.sendData(\"/gps/new\", {\n    gpsCount: i(this, y),\n    lat: t.coords.latitude,\n    lon: t.coords.longitude,\n    acc: t.coords.accuracy,\n    session: i(this, E)\n  }), t.coords.accuracy <= i(this, P) && (i(this, f) === null ? r(this, f, {\n    latitude: t.coords.latitude,\n    longitude: t.coords.longitude\n  }) : e = u(this, l, G).call(this, i(this, f), t.coords), e >= i(this, b) && (i(this, f).longitude = t.coords.longitude, i(this, f).latitude = t.coords.latitude, i(this, m) || (u(this, l, S).call(this, t.coords.longitude, t.coords.latitude), (n = i(this, p)) == null || n.sendData(\"/worldorigin/new\", {\n    gpsCount: i(this, y),\n    lat: t.coords.latitude,\n    lon: t.coords.longitude,\n    session: i(this, E),\n    initialPosition: i(this, m)\n  })), u(this, l, H).call(this, this.camera, t.coords.longitude, t.coords.latitude), (h = i(this, p)) == null || h.sendData(\"/gps/accepted\", {\n    gpsCount: i(this, y),\n    cameraX: this.camera.position.x,\n    cameraZ: this.camera.position.z,\n    session: i(this, E),\n    distMoved: e\n  }), i(this, M).gpsupdate && i(this, M).gpsupdate(t, e)));\n}, /**\n * Calculate haversine distance between two lat/lon pairs.\n *\n * Taken from original A-Frame AR.js location-based components\n */\nG = function(t, e) {\n  const s = o.MathUtils.degToRad(e.longitude - t.longitude), n = o.MathUtils.degToRad(e.latitude - t.latitude), h = Math.sin(n / 2) * Math.sin(n / 2) + Math.cos(o.MathUtils.degToRad(t.latitude)) * Math.cos(o.MathUtils.degToRad(e.latitude)) * (Math.sin(s / 2) * Math.sin(s / 2));\n  return 2 * Math.atan2(Math.sqrt(h), Math.sqrt(1 - h)) * 6371e3;\n};\nclass Z {\n  /**\n   * Create a WebcamRenderer.\n   * @param {THREE.WebGLRenderer} renderer - the Three.js renderer.\n   * @param {string} videoElementSelector - selector to obtain the HTML video \n   * element to render the webcam feed. If a falsy value (e.g. null or \n   * undefined), a video element will be created.\n   * @options {Object} - options to use for initialising the camera. Currently\n   * width and height properties are understood.\n   */\n  constructor(t, e, s) {\n    this.renderer = t, this.renderer.autoClear = !1, this.sceneWebcam = new o.Scene();\n    let n;\n    e ? n = document.querySelector(e) : (n = document.createElement(\"video\"), n.setAttribute(\"autoplay\", !0), n.setAttribute(\"playsinline\", !0), n.style.display = \"none\", document.body.appendChild(n)), this.geom = new o.PlaneGeometry(), this.texture = new o.VideoTexture(n), this.material = new o.MeshBasicMaterial({ map: this.texture });\n    const h = new o.Mesh(this.geom, this.material);\n    if (this.sceneWebcam.add(h), this.cameraWebcam = new o.OrthographicCamera(\n      -0.5,\n      0.5,\n      0.5,\n      -0.5,\n      0,\n      10\n    ), navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const g = {\n        video: {\n          width: (s == null ? void 0 : s.width) || 1280,\n          height: (s == null ? void 0 : s.height) || 720,\n          facingMode: \"environment\"\n        }\n      };\n      navigator.mediaDevices.getUserMedia(g).then((T) => {\n        console.log(\"using the webcam successfully...\"), n.srcObject = T, n.play();\n      }).catch((T) => {\n        setTimeout(() => {\n          alert(\n            `Webcam Error\nName: ` + T.name + `\nMessage: ` + T.message\n          );\n        }, 1e3);\n      });\n    } else\n      setTimeout(() => {\n        alert(\"sorry - media devices API not supported\");\n      }, 1e3);\n  }\n  /**\n   * Update the webcam.\n   * Should be called from your Three.js rendering (animation) function.\n   */\n  update() {\n    this.renderer.clear(), this.renderer.render(this.sceneWebcam, this.cameraWebcam), this.renderer.clearDepth();\n  }\n  /**\n   * Free up the memory associated with the webcam.\n   * Should be called when your application closes.\n   */\n  dispose() {\n    this.material.dispose(), this.texture.dispose(), this.geom.dispose();\n  }\n}\nconst z = new o.Vector3(0, 0, 1), U = new o.Euler(), Q = new o.Quaternion(), X = new o.Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)), V = { type: \"change\" };\nclass B extends o.EventDispatcher {\n  /**\n   * Create an instance of DeviceOrientationControls.\n   * @param {Object} object - the object to attach the controls to\n   * (usually your Three.js camera)\n   */\n  constructor(t) {\n    super(), window.isSecureContext === !1 && console.error(\"THREE.DeviceOrientationControls: DeviceOrientationEvent is only available in secure contexts (https)\");\n    const e = this, s = 1e-6, n = new o.Quaternion();\n    this.object = t, this.object.rotation.reorder(\"YXZ\"), this.enabled = !0, this.deviceOrientation = {}, this.screenOrientation = 0, this.alphaOffset = 0, this.deviceOrientationEventName = \"ondeviceorientationabsolute\" in window ? \"deviceorientationabsolute\" : \"deviceorientation\";\n    const h = function(c) {\n      e.deviceOrientation = c;\n    }, g = function() {\n      e.screenOrientation = window.orientation || 0;\n    }, T = function(c, D, A, R, C) {\n      U.set(A, D, -R, \"YXZ\"), c.setFromEuler(U), c.multiply(X), c.multiply(Q.setFromAxisAngle(z, -C));\n    };\n    this.connect = function() {\n      g(), window.DeviceOrientationEvent !== void 0 && typeof window.DeviceOrientationEvent.requestPermission == \"function\" ? window.DeviceOrientationEvent.requestPermission().then(function(c) {\n        c == \"granted\" && (window.addEventListener(\"orientationchange\", g), window.addEventListener(e.deviceOrientationEventName, h));\n      }).catch(function(c) {\n        console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", c);\n      }) : (window.addEventListener(\"orientationchange\", g), window.addEventListener(e.deviceOrientationEventName, h)), e.enabled = !0;\n    }, this.disconnect = function() {\n      window.removeEventListener(\"orientationchange\", g), window.removeEventListener(e.deviceOrientationEventName, h), e.enabled = !1;\n    }, this.update = function() {\n      if (e.enabled === !1) return;\n      const c = e.deviceOrientation;\n      if (c) {\n        const D = c.alpha ? o.MathUtils.degToRad(c.alpha) + e.alphaOffset : 0, A = c.beta ? o.MathUtils.degToRad(c.beta) : 0, R = c.gamma ? o.MathUtils.degToRad(c.gamma) : 0, C = e.screenOrientation ? o.MathUtils.degToRad(e.screenOrientation) : 0;\n        T(e.object.quaternion, D, A, R, C), 8 * (1 - n.dot(e.object.quaternion)) > s && (n.copy(e.object.quaternion), e.dispatchEvent(V));\n      }\n    }, this.dispose = function() {\n      e.disconnect();\n    }, this.connect();\n  }\n}\nclass $ {\n  /**\n   * Create a ClickHandler.\n   * @param {THREE.WebGLRenderer} - The Three.js renderer on which the click\n   * events will be handled.\n   */\n  constructor(t) {\n    this.raycaster = new o.Raycaster(), this.normalisedMousePosition = new o.Vector2(null, null), t.domElement.addEventListener(\"click\", (e) => {\n      this.normalisedMousePosition.set(\n        e.clientX / t.domElement.clientWidth * 2 - 1,\n        -(e.clientY / t.domElement.clientHeight * 2) + 1\n      );\n    });\n  }\n  /**\n   * Cast a ray into the scene to detect objects.\n   * @param {THREE.Camera} - The active Three.js camera, from which the ray\n   * will be cast.\n   * @param {THREE.Scene} - The active Three.js scene, which the ray will be\n   * cast into.\n   * @return {Array} - array of all intersected objects.\n   */\n  raycast(t, e) {\n    if (this.normalisedMousePosition.x !== null && this.normalisedMousePosition.y !== null) {\n      this.raycaster.setFromCamera(this.normalisedMousePosition, t);\n      const s = this.raycaster.intersectObjects(e.children, !1);\n      return this.normalisedMousePosition.set(null, null), s;\n    }\n    return [];\n  }\n}\nexport {\n  $ as ClickHandler,\n  B as DeviceOrientationControls,\n  Y as LocationBased,\n  N as SphMercProjection,\n  Z as WebcamRenderer\n};\n"],
  "mappings": "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",
  "names": []
}
